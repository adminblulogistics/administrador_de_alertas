// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using LD.EntitiesGB;
using Microsoft.EntityFrameworkCore;

namespace LD.DataGB;

public partial class GB_GLOBALContext : DbContext
{
    public GB_GLOBALContext(DbContextOptions<GB_GLOBALContext> options)
        : base(options)
    {
    }

    public virtual DbSet<GB_PermissionUserModule> GB_PermissionUserModule { get; set; }

    public virtual DbSet<GB_module> GB_module { get; set; }

    public virtual DbSet<GB_modulePermission> GB_modulePermission { get; set; }

    public virtual DbSet<GB_role> GB_role { get; set; }

    public virtual DbSet<GB_rolePermission> GB_rolePermission { get; set; }

    public virtual DbSet<GB_user> GB_user { get; set; }

    public virtual DbSet<GB_userModule> GB_userModule { get; set; }

    public virtual DbSet<GB_userRole> GB_userRole { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<GB_PermissionUserModule>(entity =>
        {
            entity.HasNoKey();

            entity.HasIndex(e => e.rol_id, "INDEX_GB_PermissionUserModule_Rol_id").HasFillFactor(80);

            entity.HasIndex(e => e.rol_id, "IX_GB_PermissionUserModule_rol_id").HasFillFactor(80);

            entity.HasOne(d => d.modPer).WithMany()
                .HasForeignKey(d => d.modPer_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GB_PERMI_REFERENCE_GB_MODUL");

            entity.HasOne(d => d.rol).WithMany()
                .HasForeignKey(d => d.rol_id)
                .HasConstraintName("FK_GB_PERMI_REFERENCE_GB_ROLE");

            entity.HasOne(d => d.useMod).WithMany()
                .HasForeignKey(d => d.useMod_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GB_PERMI_REFERENCE_GB_USERM");
        });

        modelBuilder.Entity<GB_module>(entity =>
        {
            entity.HasKey(e => e.mod_id).HasName("PK__Modulos__023D5A04");

            entity.HasIndex(e => e.mod_id, "INDEX_GB_Module_Id").HasFillFactor(80);

            entity.Property(e => e.mod_adapter)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.mod_initials)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.mod_model)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.mod_name)
                .HasMaxLength(200)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS");
            entity.Property(e => e.mod_params)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.mod_path)
                .HasMaxLength(255)
                .IsUnicode(false);

            entity.HasOne(d => d.mod_father).WithMany(p => p.Inversemod_father)
                .HasForeignKey(d => d.mod_fatherId)
                .HasConstraintName("FK_GB_MODULE_REF_GB_MODULES");
        });

        modelBuilder.Entity<GB_modulePermission>(entity =>
        {
            entity.HasKey(e => e.modPer_id).HasName("PK_GB_MODULEPERMISSION");

            entity.HasOne(d => d.mod).WithMany(p => p.GB_modulePermission)
                .HasForeignKey(d => d.mod_id)
                .HasConstraintName("FK_GB_MODUL_REFERENCE_GB_MODUL");
        });

        modelBuilder.Entity<GB_role>(entity =>
        {
            entity.HasKey(e => e.rol_id).HasName("PK_GB_ROLE");

            entity.Property(e => e.rol_description)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.rol_initials)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.rol_name)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.sistema)
                .HasMaxLength(15)
                .IsFixedLength();
        });

        modelBuilder.Entity<GB_rolePermission>(entity =>
        {
            entity.HasKey(e => new { e.rol_id, e.modPer_id });

            entity.HasIndex(e => e.rol_id, "_dta_index_GB_rolePermission_37_325576198__K1_2").HasFillFactor(80);

            entity.HasOne(d => d.rol).WithMany(p => p.GB_rolePermission)
                .HasForeignKey(d => d.rol_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GB_ROLEP_REFERENCE_GB_ROLE");
        });

        modelBuilder.Entity<GB_user>(entity =>
        {
            entity.HasKey(e => e.use_id).HasName("PK_in_Usuarios");

            entity.Property(e => e.use_active).HasDefaultValueSql("((0))");
            entity.Property(e => e.use_alias)
                .HasMaxLength(50)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.use_answer)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.use_business_unit)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.use_cellNumber)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.use_charge)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.use_city)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.use_createDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.use_departament)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.use_editDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.use_lastName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS");
            entity.Property(e => e.use_mail)
                .HasMaxLength(200)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS");
            entity.Property(e => e.use_name)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS");
            entity.Property(e => e.use_password)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS");
            entity.Property(e => e.use_passwordDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.use_user)
                .HasMaxLength(100)
                .IsUnicode(false)
                .UseCollation("Modern_Spanish_CI_AS");
        });

        modelBuilder.Entity<GB_userModule>(entity =>
        {
            entity.HasKey(e => e.useMod_id).HasName("PK_in_Funciones_Usuarios");

            entity.HasIndex(e => e.use_id, "_dta_index_GB_userModule_37_485576768__K3_1_2_4").HasFillFactor(80);

            entity.HasOne(d => d.mod).WithMany(p => p.GB_userModule)
                .HasForeignKey(d => d.mod_id)
                .HasConstraintName("FK_GB_USERM_REFERENCE_GB_MODUL");

            entity.HasOne(d => d.use).WithMany(p => p.GB_userModule)
                .HasForeignKey(d => d.use_id)
                .HasConstraintName("FK_GB_USERM_REFERENCE_GB_USER");
        });

        modelBuilder.Entity<GB_userRole>(entity =>
        {
            entity.HasKey(e => new { e.use_id, e.rol_id });

            entity.HasOne(d => d.rol).WithMany(p => p.GB_userRole)
                .HasForeignKey(d => d.rol_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GB_USERROL_REF_GB_ROLES");

            entity.HasOne(d => d.use).WithMany(p => p.GB_userRole)
                .HasForeignKey(d => d.use_id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_GB_USERROL_REF_GB_USER");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}